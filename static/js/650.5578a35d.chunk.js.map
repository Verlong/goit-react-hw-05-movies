{"version":3,"file":"static/js/650.5578a35d.chunk.js","mappings":"sMAuEA,UA/DqB,WAAO,IAAD,IACzB,GAAsCA,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WACnDC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAI,OAAIZ,EAAeY,EAAnB,GACnC,GAAE,CAACL,IAEJ,IACEM,EAOEd,EAPFc,eACAC,EAMEf,EANFe,SACAC,EAKEhB,EALFgB,OACAC,EAIEjB,EAJFiB,YACAC,EAGElB,EAHFkB,aACAC,EAEEnB,EAFFmB,aACAC,EACEpB,EADFoB,WAGF,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIjB,EAAoBkB,QAA9B,SAAuC,mBACvC,4BACE,gBACEC,IACEN,EAAW,yCAC2BA,GAD3B,+CAIbO,MAAO,IACPC,QAAQ,OACRC,IAAKZ,KAEP,wBAAKA,KACL,wBAAKK,KACL,uBACGH,GACCA,EAAOW,QACPX,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALD,EAA3B,OAGf,uBAAId,KACJ,0BAAI,eAAaK,MACjB,0BAAI,YAAUF,SAEhB,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMG,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,oBAIzB,SAAC,EAAAU,SAAD,CAAUC,UAAU,yBAAK,eAAzB,UACE,SAAC,KAAD,QAIP,C","sources":["components/movie-detail/movie-details.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\n// import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'api/get-api-key';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState({});\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => setMovieDetail(data));\n  }, [movieId]);\n\n  const {\n    original_title,\n    overview,\n    genres,\n    poster_path,\n    vote_average,\n    release_date,\n    vote_count,\n  } = movieDetail;\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Back to main </Link>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          loading=\"lazy\"\n          alt={original_title}\n        />\n        <h2>{original_title}</h2>\n        <h3>{release_date}</h3>\n        <p>\n          {genres &&\n            genres.length &&\n            genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n        </p>\n\n        <p>{overview}</p>\n        <h4>Vote total: {vote_count}</h4>\n        <h4>Average: {vote_average}</h4>\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["useState","movieDetail","setMovieDetail","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","getMovieDetails","then","data","original_title","overview","genres","poster_path","vote_average","release_date","vote_count","to","current","src","width","loading","alt","length","map","id","name","Suspense","fallback"],"sourceRoot":""}